{"version":3,"file":"auth.js","sourceRoot":"","sources":["../../src/auth/auth.ts"],"names":[],"mappings":";AAEA,qCAAgD;AAGhD,uCAAuC;AACvC,6CAA2C;AAM3C;IAAA;IAaA,CAAC;IAVQ,WAAK,GAAZ,UAAa,MAAyB,EAAE,QAAwB;QAAnD,uBAAA,EAAA,iBAAyB;QAAE,yBAAA,EAAA,gBAAwB;QAC9D,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;QACtB,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC5B,CAAC;IACM,UAAI,GAAX,UAAY,MAAW,EAAE,MAAe,EAAE,QAAiB,EAAE,EAAa;QACxE,MAAM,CAAC,mBAAI,CAAC,MAAM,EAAE,MAAM,IAAI,KAAK,CAAC,MAAM,EAAE,EAAC,SAAS,EAAE,QAAQ,IAAI,KAAK,CAAC,QAAQ,EAAC,EAAE,UAAC,GAAG,EAAE,KAAK,IAAK,OAAA,EAAE,IAAI,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAApB,CAAoB,CAAC,CAAC;IAC7H,CAAC;IACM,YAAM,GAAb,UAAc,KAAa,EAAE,MAAe,EAAE,EAAa;QACzD,MAAM,CAAC,qBAAM,CAAC,KAAK,EAAE,MAAM,IAAI,KAAK,CAAC,MAAM,EAAE,UAAC,GAAG,EAAE,MAAM,IAAK,OAAA,EAAE,IAAI,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,EAArB,CAAqB,CAAC,CAAC;IACvF,CAAC;IACH,YAAC;AAAD,CAAC,AAbD;AACiB,YAAM,GAAW,QAAQ,CAAC;AAC1B,cAAQ,GAAW,KAAK,CAAC;AAF7B,sBAAK;AAclB;IAAA;IA6LA,CAAC;IAtLQ,UAAK,GAAZ,UAAa,KAAiB,EAAE,MAAyB,EAAE,QAAwB;QAAnD,uBAAA,EAAA,iBAAyB;QAAE,yBAAA,EAAA,gBAAwB;QACjF,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IACM,gBAAW,GAAlB,UAAmB,MAAc;QAC/B,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,UAAS,IAAI;YAC9B,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBAChC,IAAI,CAAC,QAAQ,GAAG,mBAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;YAC9C,CAAC;YACD,IAAI,EAAE,CAAC;QACT,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IACM,yBAAoB,GAA3B,UAA4B,iBAAoC;QAC9D,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;QAC3C,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IACM,qBAAgB,GAAvB,UAAwB,aAAgC;QACtD,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IACM,2BAAsB,GAA7B,UAA8B,iBAAoC;QAChE,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;QAC3C,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IACM,uBAAkB,GAAzB,UAA0B,IAAI;QAC5B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IACM,qBAAgB,GAAvB,UAAwB,IAAI;QAC1B,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;IACM,iBAAY,GAAnB,UAAoB,IAAI;QACtB,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;QACrB,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC1B,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IACM,gBAAW,GAAlB,UAAmB,IAAI;QACrB,MAAM,CAAC,CAAC,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,CAAC;IACrE,CAAC;IACM,cAAS,GAAhB,UAAiB,IAAI;QACnB,MAAM,CAAC,CAAC,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,CAAC;IACjE,CAAC;IACM,UAAK,GAAZ,UAAa,IAAI;QACf,MAAM,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,CAAC;IACzD,CAAC;IACM,UAAK,GAAZ,UAAa,IAAI,EAAE,QAAQ;QACzB,MAAM,CAAC,sBAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC9C,CAAC;IACM,WAAM,GAAb,UAAc,IAA8B;QAC1C,MAAM,CAAC,UAAS,GAAY,EAAE,GAAa,EAAE,IAAkB;YAC7D,cAAc,GAAQ,EAAE,MAAW,EAAE,gBAAqB,EAAE,KAAc;gBACxE,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACX,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,gBAAgB,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,UAAC,GAAG,EAAE,KAAK;wBAC5E,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,QAAQ,GAAG,KAAK,EAAC,CAAC,CAAC;wBAC7D,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;wBACnC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;wBACvB,IAAI,EAAE,CAAC;oBACT,CAAC,CAAC,CAAC;gBACL,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;wBACT,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;4BAC7B,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;wBACrB,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACU,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;wBACvC,CAAC;oBACH,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;wBACzB,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;wBACtB,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;wBACvB,IAAI,EAAE,CAAC;oBACT,CAAC;gBACH,CAAC;YACH,CAAC;YACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAC,CAAC,CAAC,SAAS,CAAC,UAAA,GAAG;gBAC1D,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;oBACf,IAAI,MAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;oBAClB,qEAAqE;oBACrE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAI,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBACxC,IAAI,cAAc,GAAQ,IAAI,CAAC,SAAS,CAAC,MAAI,CAAC,CAAC;wBAC/C,EAAE,CAAC,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC;4BAC7B,cAAc,CAAC,SAAS,CAAC,UAAA,mBAAmB,IAAI,OAAA,IAAI,CAAC,IAAI,EAAE,MAAI,EAAE,mBAAmB,EAAE,QAAQ,CAAC,EAA/C,CAA+C,CAAC,CAAC;wBACnG,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,IAAI,CAAC,IAAI,EAAE,MAAI,EAAE,cAAc,EAAE,QAAQ,CAAC,CAAC;wBAC7C,CAAC;oBACH,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,gBAAgB,CAAC,CAAC;oBAC7C,CAAC;gBACH,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,gBAAgB,CAAC,CAAC;gBAC7C,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;IACJ,CAAC;IACM,eAAU,GAAjB,UAAkB,IAAsC;QACtD,MAAM,CAAC,UAAS,GAAoB,EAAE,GAAqB,EAAE,IAA0B;YACrF,cAAc,GAAQ,EAAE,MAAW,EAAE,KAAc;gBACjD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACX,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;oBACnC,IAAI,EAAE,CAAC;gBACT,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;wBACT,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;4BAC7B,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;wBACrB,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACkB,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;wBAC/C,CAAC;oBACH,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;wBACzB,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;wBACtB,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;wBACvB,IAAI,EAAE,CAAC;oBACT,CAAC;gBACH,CAAC;YACH,CAAC;YACD,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;gBACtB,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC;gBACnC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,UAAC,GAAG,EAAE,IAAI;oBACrD,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACR,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,iBAAiB,CAAC,CAAC;oBACtC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACnC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;4BACnB,IAAI,CAAC,SAAS,CAAC,UAAA,IAAI;gCACjB,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;4BAChC,CAAC,EAAE,UAAC,GAAG;gCACL,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;4BAC9B,CAAC,CAAC,CAAC;wBACL,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;wBAChC,CAAC;oBACH,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,eAAe,CAAC,CAAC;YACpC,CAAC;QACH,CAAC,CAAC;IACJ,CAAC;IACM,YAAO,GAAd;QACE,MAAM,CAAC,UAAS,GAAoB,EAAE,GAAqB,EAAE,IAA0B;YACrF,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YACzB,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;YACtB,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACvB,IAAI,EAAE,CAAC;QACT,CAAC,CAAC;IACJ,CAAC;IACM,aAAQ,GAAf,UAAgB,IAAsC;QACpD,MAAM,CAAC,UAAS,GAAoB,EAAE,GAAqB,EAAE,IAA0B;YACrF,cAAc,GAAQ,EAAE,MAAW,EAAE,KAAc;gBACjD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACX,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;oBAC7B,IAAI,EAAE,CAAC;gBACT,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;wBACT,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;4BAC7B,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;wBACrB,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACkB,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;wBAC/C,CAAC;oBACH,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;wBAC5B,IAAI,EAAE,CAAC;oBACT,CAAC;gBACH,CAAC;YACH,CAAC;YACD,IAAI,IAAI,GAAG;gBACT,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ;gBAC3B,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ;aAC5B,CAAC;YACF,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAA,KAAK;gBACnC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;oBACjB,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,aAAa,CAAC,CAAC;gBACnC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAA,IAAI;wBACpC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;oBACjC,CAAC,CAAC,CAAC;gBACL,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;IACJ,CAAC;IACH,WAAC;AAAD,CAAC,AA7LD;AAEiB,WAAM,GAAW,QAAQ,CAAC;AAC1B,aAAQ,GAAW,KAAK,CAAC;AAH7B,oBAAI","sourcesContent":["import { RequestHandler, Request, Response, NextFunction } from 'express';\r\nimport { Schema } from 'mongoose';\r\nimport { hashSync, compareSync} from 'bcryptjs';\r\nimport { Subject } from 'rxjs';\r\nimport { Model } from '../db';\r\n// import { AuthModel } from './model';\r\nimport { sign, verify} from 'jsonwebtoken';\r\n\r\nexport interface SerializeFunction {\r\n  (user: any): Subject<any>;\r\n}\r\n\r\nexport class Token {\r\n  private static secret: string = 'SECRET';\r\n  private static duration: number = 86400;\r\n  static setup(secret: string = 'SECRET', duration: number = 86400) {\r\n    Token.secret = secret;\r\n    Token.duration = duration;\r\n  }\r\n  static sign(object: any, secret?: string, duration?: number, cb?: Function) {\r\n    return sign(object, secret || Token.secret, {expiresIn: duration || Token.duration}, (err, token) => cb && cb(err, token));\r\n  }\r\n  static verify(token: string, secret?: string, cb?: Function) {\r\n    return verify(token, secret || Token.secret, (err, object) => cb && cb(err, object));\r\n  }\r\n}\r\nexport class Auth {\r\n  private static model: Model<any>;\r\n  private static secret: string = 'SECRET';\r\n  private static duration: number = 86400;\r\n  private static serializeFunction: SerializeFunction;\r\n  private static cleanFunction: SerializeFunction;\r\n  private static deserializeFunction: SerializeFunction;\r\n  static setup(model: Model<any>, secret: string = 'SECRET', duration: number = 86400) {\r\n    Auth.model = model;\r\n    Auth.secret = secret;\r\n    Auth.duration = duration;\r\n    return Auth;\r\n  }\r\n  static setupSchema(schema: Schema) {\r\n    schema.pre('save', function(next) {\r\n      if (this.isModified('password')) {\r\n        this.password = hashSync(this.password, 10);\r\n      }\r\n      next();\r\n    });\r\n    return Auth;\r\n  }\r\n  static setSerializeFunction(serializeFunction: SerializeFunction) {\r\n    Auth.serializeFunction = serializeFunction;\r\n    return Auth;\r\n  }\r\n  static setCleanFunction(cleanFunction: SerializeFunction) {\r\n    Auth.cleanFunction = cleanFunction;\r\n    return Auth;\r\n  }\r\n  static setDeserializeFunction(serializeFunction: SerializeFunction) {\r\n    Auth.serializeFunction = serializeFunction;\r\n    return Auth;\r\n  }\r\n  static deserializeDefault(user): Subject<any> | any {\r\n    return Auth.model.get(user);\r\n  }\r\n  static serializeDefault(user): Subject<any> | any {\r\n    return user._id;\r\n  }\r\n  static cleanDefault(user): Subject<any> | any {\r\n    user.__v = undefined;\r\n    user._id = undefined;\r\n    user.password = undefined;\r\n    return user;\r\n  }\r\n  static deserialize(user): Subject<any> | any {\r\n    return (Auth.deserializeFunction || Auth.deserializeDefault)(user);\r\n  }\r\n  static serialize(user): Subject<any> | any {\r\n    return (Auth.serializeFunction || Auth.serializeDefault)(user);\r\n  }\r\n  static clean(user): Subject<any> | any {\r\n    return (Auth.cleanFunction || Auth.cleanDefault)(user);\r\n  }\r\n  static check(user, password): boolean {\r\n    return compareSync(password, user.password);\r\n  }\r\n  static signIn(fail?: string | RequestHandler) {\r\n    return function(req: Request, res: Response, next: NextFunction) {\r\n      function done(err: any, result: any, serializedResult: any, flash?: string) {\r\n        if (result) {\r\n          Token.sign({ data: serializedResult }, Auth.secret, Auth.duration, (err, token) => {\r\n            res.cookie('token', token, { maxAge: Auth.duration * 60000});\r\n            req.body.user = Auth.clean(result);\r\n            req.body.token = token;\r\n            next();\r\n          });\r\n        } else {\r\n          if (fail) {\r\n            if (typeof fail === 'string') {\r\n              res.redirect(fail);\r\n            } else {\r\n              <RequestHandler>fail(req, res, next);\r\n            }\r\n          } else {\r\n            res.clearCookie('token');\r\n            req.body.user = false;\r\n            req.body.token = false;\r\n            next();\r\n          }\r\n        }\r\n      }\r\n      Auth.model.list({username: req.body.username}).subscribe(res => {\r\n        if (res.length) {\r\n          let user = res[0];\r\n          // let user: Subject<mongoose.Document> | mongoose.Document = res[0];\r\n          if (Auth.check(user, req.body.password)) {\r\n            let serializedUser: any = Auth.serialize(user);\r\n            if (serializedUser.subscribe) {\r\n              serializedUser.subscribe(serializedUserFinal => done(null, user, serializedUserFinal, 'logged'));\r\n            } else {\r\n              done(null, user, serializedUser, 'logged');\r\n            }\r\n          } else {\r\n            done(null, false, false, 'wrong password');\r\n          }\r\n        } else {\r\n          done(null, false, false, 'user not found');\r\n        }\r\n      });\r\n    };\r\n  }\r\n  static isSignedIn(fail?: string | express.RequestHandler) {\r\n    return function(req: express.Request, res: express.Response, next: express.NextFunction) {\r\n      function done(err: any, result: any, flash?: string) {\r\n        if (result) {\r\n          req.body.user = Auth.clean(result);\r\n          next();\r\n        } else {\r\n          if (fail) {\r\n            if (typeof fail === 'string') {\r\n              res.redirect(fail);\r\n            } else {\r\n              <express.RequestHandler>fail(req, res, next);\r\n            }\r\n          } else {\r\n            res.clearCookie('token');\r\n            req.body.user = false;\r\n            req.body.token = false;\r\n            next();\r\n          }\r\n        }\r\n      }\r\n      if (req.cookies.token) {\r\n        req.body.token = req.cookies.token;\r\n        Token.verify(req.cookies.token, Auth.secret, (err, user) => {\r\n          if (err) {\r\n            done(null, null, 'session expired');\r\n          } else {\r\n            user = Auth.deserialize(user.data);\r\n            if (user.subscribe) {\r\n              user.subscribe(user => {\r\n                done(null, user, 'logged in');\r\n              }, (err) => {\r\n                done(null, null, 'no user');\r\n              });\r\n            } else {\r\n              done(null, user, 'logged in');\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        done(null, null, 'not logged in');\r\n      }\r\n    };\r\n  }\r\n  static signOut() {\r\n    return function(req: express.Request, res: express.Response, next: express.NextFunction) {\r\n      res.clearCookie('token');\r\n      req.body.user = false;\r\n      req.body.token = false;\r\n      next();\r\n    };\r\n  }\r\n  static register(fail?: string | express.RequestHandler) {\r\n    return function(req: express.Request, res: express.Response, next: express.NextFunction) {\r\n      function done(err: any, result: any, flash?: string) {\r\n        if (result) {\r\n          req.body.registered = result;\r\n          next();\r\n        } else {\r\n          if (fail) {\r\n            if (typeof fail === 'string') {\r\n              res.redirect(fail);\r\n            } else {\r\n              <express.RequestHandler>fail(req, res, next);\r\n            }\r\n          } else {\r\n            req.body.registered = false;\r\n            next();\r\n          }\r\n        }\r\n      }\r\n      let user = {\r\n        username: req.body.username,\r\n        password: req.body.password\r\n      };\r\n      Auth.model.list(user).subscribe(users => {\r\n        if (users.length) {\r\n          done(null, false, 'user exists');\r\n        } else {\r\n          Auth.model.create(user).subscribe(user => {\r\n            done(null, user, 'registered');\r\n          });\r\n        }\r\n      });\r\n    };\r\n  }\r\n}\r\n"]}