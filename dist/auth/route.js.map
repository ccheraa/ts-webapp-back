{"version":3,"file":"route.js","sourceRoot":"","sources":["../../src/auth/route.ts"],"names":[],"mappings":";AAAA,oCAAsD;AACtD,+BAA8B;AAE9B,4CAA2C;AAC3C,wBAA+B,KAAqB;IAClD,WAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAClB,gBAAgB,EAAkB;QAAlB,mBAAA,EAAA,SAAkB;QAChC,MAAM,CAAC,UAAC,GAAG,EAAE,GAAG,EAAE,IAAI;YACpB,GAAG,CAAC,IAAI,CAAC,EAAC,EAAE,IAAA,EAAC,CAAC,CAAC;QACjB,CAAC,CAAC;IACJ,CAAC;IACD,IAAI,QAAQ,GAAU,IAAI,cAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,WAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,UAAC,GAAG,EAAE,GAAG,EAAE,IAAI;QAC1G,GAAG,CAAC,IAAI,CAAC;YACP,EAAE,EAAE,IAAI;YACR,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK;YACrB,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI;SACpB,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACL,IAAI,OAAO,GAAU,IAAI,cAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,WAAI,CAAC,OAAO,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;IAC/E,IAAI,MAAM,GAAU,IAAI,cAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,WAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,UAAC,GAAG,EAAE,GAAG,EAAE,IAAI;QAC1F,GAAG,CAAC,IAAI,CAAC;YACP,EAAE,EAAE,IAAI;YACR,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK;YACrB,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI;SACpB,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACL,IAAI,QAAQ,GAAU,IAAI,cAAK,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,WAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;IAChG,MAAM,CAAC,IAAI,mBAAU,CAAC,eAAM,EAAE,GAAG,OAAO,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;AACnF,CAAC;AAxBD,wCAwBC","sourcesContent":["import { Controller, Route, Server } from '../server';\r\nimport { Auth } from './auth';\r\nimport { AuthModel } from './model';\r\nimport { ApiUrl } from '@ts-webapp/common';\r\nexport function UserController(model: AuthModel<any>) {\r\n  Auth.setup(model);\r\n  function result(ok: Boolean = true) {\r\n    return (req, res, next) => {\r\n      res.json({ok});\r\n    };\r\n  }\r\n  let islogged: Route = new Route('/logged').on(['post', 'get'], Auth.isSignedIn(result(false)), (req, res, next) => {\r\n      res.json({\r\n        ok: true,\r\n        token: req.body.token,\r\n        user: req.body.user\r\n      });\r\n    });\r\n  let signout: Route = new Route('/logout').on('post', Auth.signOut(), result());\r\n  let signin: Route = new Route('/login').on('post', Auth.signIn(result(false)), (req, res, next) => {\r\n      res.json({\r\n        ok: true,\r\n        token: req.body.token,\r\n        user: req.body.user\r\n      });\r\n    });\r\n  let register: Route = new Route('/register').on('post', Auth.register(result(false)), result());\r\n  return new Controller(ApiUrl() + '/user', [signin, signout, islogged, register]);\r\n}"]}