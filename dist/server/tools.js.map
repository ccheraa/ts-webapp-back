{"version":3,"file":"tools.js","sourceRoot":"","sources":["../../src/server/tools.ts"],"names":[],"mappings":";AAAA,2BAA2C;AAC3C,oBAA2B,IAAY,EAAE,IAAwB;IAAxB,qBAAA,EAAA,gBAAwB;IAC/D,IAAI,QAAQ,GAAG;QACb,OAAO,EAAE,IAAI;QACb,UAAU,EAAE,IAAI;QAChB,SAAS,EAAE,IAAI;QACf,IAAI,EAAE,UAAS,MAAM,EAAE,SAAU;YAC/B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC9B,CAAC;QACD,IAAI,EAAE,UAAS,QAAQ;YACrB,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;QAC1B,CAAC;QACD,GAAG,EAAE,UAAS,QAAQ;YACpB,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;QAC7B,CAAC;QACD,OAAO,EAAE,UAAS,QAAQ;YACxB,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACrB,CAAC;QACD,QAAQ,EAAE,UAAS,QAAQ;YACzB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC5B,CAAC;KACF,CAAC;IACF,IAAI,MAAM,GAAG,kBAAY,EAAE,CAAC;IAC5B,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC1B,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,CAAC;QAC5B,QAAQ,CAAC,UAAU,IAAU,QAAQ,CAAC,UAAW,EAAE,CAAC;QACpD,QAAQ,CAAC,SAAS,IAAU,QAAQ,CAAC,SAAU,CAAC,KAAK,CAAC,CAAC;IACzD,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,EAAE,CAAC,WAAW,EAAE,UAAU,CAAC;QAChC,MAAM,CAAC,KAAK,EAAE,CAAC;QACf,QAAQ,CAAC,OAAO,IAAU,QAAQ,CAAC,OAAQ,EAAE,CAAC;QAC9C,QAAQ,CAAC,SAAS,IAAU,QAAQ,CAAC,SAAU,CAAC,IAAI,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,QAAQ,CAAC;AAClB,CAAC;AAlCD,gCAkCC","sourcesContent":["import { createServer, Socket } from 'net';\r\nexport function isPortFree(port: number, host: string = '0.0.0.0') {\r\n  let callback = {\r\n    _onFree: null,\r\n    _onNotFree: null,\r\n    _callback: null,\r\n    then: function(ifFree, ifNotFree?) {\r\n      this._onFree = ifFree;\r\n      this._onNotFree = ifNotFree;\r\n    },\r\n    free: function(callback) {\r\n      this._onFree = callback;\r\n    },\r\n    not: function(callback) {\r\n      this._onNotFree = callback;\r\n    },\r\n    notFree: function(callback) {\r\n      this.not(callback);\r\n    },\r\n    callback: function(callback) {\r\n      this._callback = callback;\r\n    }\r\n  };\r\n  let server = createServer();\r\n  server.listen(port, host);\r\n  server.on('error', function (e) {\r\n    callback._onNotFree && (<any>callback._onNotFree)();\r\n    callback._callback && (<any>callback._callback)(false);\r\n  });\r\n  server.on('listening', function (e) {\r\n    server.close();\r\n    callback._onFree && (<any>callback._onFree)();\r\n    callback._callback && (<any>callback._callback)(true);\r\n  });\r\n  return callback;\r\n}"]}