{"version":3,"file":"route.js","sourceRoot":"","sources":["../../src/server/route.ts"],"names":[],"mappings":";AACA,IAAM,YAAY,GAAa,CAAC,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;AAChH;IACE;IAAe,CAAC;IACT,yBAAO,GAAd,UAAe,GAAa;QAA5B,iBAIC;QAHC,YAAY;aACT,MAAM,CAAC,UAAA,GAAG,IAAI,OAAA,KAAI,CAAC,GAAG,CAAC,EAAT,CAAS,CAAC;aACxB,OAAO,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,KAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAnB,CAAmB,CAAC,CAAC;IACzC,CAAC;IACM,qBAAG,GAAV,UAAW,GAAa;QAAxB,iBAIC;QAHC,MAAM,CAAC,YAAY;aAChB,MAAM,CAAC,UAAA,GAAG,IAAI,OAAA,KAAI,CAAC,GAAG,CAAC,EAAT,CAAS,CAAC;aACxB,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,KAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAnB,CAAmB,CAAC,CAAC;IACrC,CAAC;IACM,oBAAE,GAAT,UAAU,MAAyB;QAAnC,iBAOC;QAPoC,mBAAyC;aAAzC,UAAyC,EAAzC,qBAAyC,EAAzC,IAAyC;YAAzC,kCAAyC;;QAC5E,EAAE,CAAC,CAAC,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC9B,MAAmB,CAAC,OAAO,CAAC,UAAA,SAAS,IAAI,OAAA,KAAI,CAAC,EAAE,OAAP,KAAI,GAAI,SAAS,SAAK,SAAS,IAA/B,CAAgC,CAAC,CAAC;QAC9E,CAAC;QAAC,IAAI,CAAC,CAAC;YACL,IAAY,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,SAAS,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,GAAI,IAAY,CAAS,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;QAC/G,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IACH,cAAC;AAAD,CAAC,AApBD,IAoBC;AApBY,0BAAO;AAqBpB;IAEE,eAAmB,GAAiB;QAAjB,oBAAA,EAAA,SAAiB;QAAjB,QAAG,GAAH,GAAG,CAAc;QAD7B,YAAO,GAAY,IAAI,OAAO,EAAE,CAAC;IACD,CAAC;IACjC,YAAM,GAAb,UAAc,GAAmB,EAAE,GAAiB,EAAE,MAAiC;QAApD,oBAAA,EAAA,SAAiB;QAAE,uBAAA,EAAA,cAAiC;QACrF,MAAM,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;IACxC,CAAC;IACM,kBAAE,GAAT,UAAU,MAAyB;QAAE,mBAAyC;aAAzC,UAAyC,EAAzC,qBAAyC,EAAzC,IAAyC;YAAzC,kCAAyC;;QAC5E,CAAA,KAAA,IAAI,CAAC,OAAO,CAAA,CAAC,EAAE,YAAC,MAAM,SAAK,SAAS,GAAE;QACtC,MAAM,CAAC,IAAI,CAAC;;IACd,CAAC;IACH,YAAC;AAAD,CAAC,AAVD,IAUC;AAVY,sBAAK","sourcesContent":["import { RequestHandler } from 'express';\r\nconst HTTP_METHODS: string[] = ['options', 'patch', 'get', 'head', 'post', 'put', 'delete', 'trace', 'connect'];\r\nexport class Handles {\r\n  constructor() {}\r\n  public forEach(fun: Function) {\r\n    HTTP_METHODS\r\n      .filter(key => this[key])\r\n      .forEach(key => fun(this[key], key));\r\n  }\r\n  public map(fun: Function) {\r\n    return HTTP_METHODS\r\n      .filter(key => this[key])\r\n      .map(key => fun(this[key], key));\r\n  }\r\n  public on(method: string | string[], ...functions: (RequestHandler | string)[]): Handles {\r\n    if (typeof method === 'object') {\r\n      (method as string[]).forEach(methodRef => this.on(methodRef, ...functions));\r\n    } else {\r\n      (this as any)[method] = (typeof functions[0] === 'string') ? (this as any)[<string>functions[0]] : functions;\r\n    }\r\n    return this;\r\n  }\r\n}\r\nexport class Route {\r\n  public handles: Handles = new Handles();\r\n  constructor(public url: string = '/') {}\r\n  static create(fun: RequestHandler, url: string = '/', method: string | string[] = 'get') {\r\n    return new Route(url).on(method, fun);\r\n  }\r\n  public on(method: string | string[], ...functions: (RequestHandler | string)[]): Route {\r\n    this.handles.on(method, ...functions);\r\n    return this;\r\n  }\r\n}"]}