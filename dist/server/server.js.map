{"version":3,"file":"server.js","sourceRoot":"","sources":["../../src/server/server.ts"],"names":[],"mappings":"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","sourcesContent":["import * as express from 'express';\r\nimport * as http from 'http';\r\nimport { Controller } from './controller';\r\n// import { isPortFree } from './tools';\r\nimport * as bodyParser from 'body-parser';\r\nimport * as cookieParser from 'cookie-parser';\r\n\r\nexport const serverDefaultConfig = {\r\n  port: 8001,\r\n  host: '0.0.0.0'\r\n};\r\nexport class Server {\r\n  static main: Server = null;\r\n  static servers: http.Server[] = [];\r\n\r\n  public config = serverDefaultConfig;\r\n  public app: express.Express;\r\n  public controllers: Controller[] = [];\r\n  public statics: any[] = [];\r\n  public routes: any[] = [];\r\n  public middlewares: any[] = [];\r\n  public server: http.Server;\r\n  public static bootstrap(config: any = {}): Server {\r\n    return Server.main = new Server(config);\r\n  }\r\n  constructor(config: any = {}) {\r\n    if (config) {\r\n      if (config.port) {\r\n        this.config.port = config.port;\r\n      }\r\n      if (config.host) {\r\n        this.config.host = config.host;\r\n      }\r\n    }\r\n    this.app = express();\r\n    this.app.use(bodyParser.json());\r\n    this.app.use(bodyParser.urlencoded({ extended: true }));\r\n    this.app.use(cookieParser());\r\n    this.app.use(function(err, req, res, next) {\r\n      res.status(err.status || 500);\r\n      res.render('error', {\r\n          message: err.message,\r\n          error: err\r\n      });\r\n    });\r\n    this.static('./src/public', '/');\r\n  }\r\n  public applyRoutes(controllers: Controller[]): void {\r\n    controllers.forEach(controller => (this.controllers.indexOf(controller) > -1) || this.controllers.push(controller));\r\n  }\r\n  public static(dir: string, url?: string): void {\r\n    url = url || '/' + dir;\r\n    let route = {\r\n      url: url,\r\n      dir,\r\n      handle: express.static(dir)\r\n    };\r\n    this.statics.push(route);\r\n    this.app.use(url, route.handle);\r\n  }\r\n  public default(...functions: express.RequestHandler[]): void {\r\n    functions.forEach(fun => this.app.use((err, req, res, next) => err ? fun(req, res, next) : next(err)));\r\n  }\r\n  public route(url: string, ...functions: express.RequestHandler[]): void {\r\n    this.routes.push({\r\n      url: url,\r\n      handle: functions\r\n    });\r\n    this.app.use(url, ...functions.filter(route => !!route));\r\n  }\r\n  public middleware(...functions: express.RequestHandler[]): void {\r\n    this.middlewares.push(...functions);\r\n    this.app.use(...functions);\r\n  }\r\n  public ip(): string {\r\n    return this.config.host + ':' + this.config.port;\r\n  }\r\n  private static error(error: any){\r\n    Server.stop();\r\n    throw error;\r\n  }\r\n  public start(callback?: Function): void {\r\n    this.controllers.forEach(controller => controller.setup(this.app));\r\n    this.server = this.app.listen(this.config.port, this.config.host, callback);\r\n    Server.servers.push(this.server);\r\n    process.on('exit', Server.error);\r\n    process.on('uncaughtException', Server.error);\r\n    process.on('SIGTERM', Server.error);\r\n  }\r\n  // TODO: Server.stop not working?\r\n  static stop(callback?: Function): void {\r\n    let closedServers: number = 0;\r\n    let closedServer = function(server: http.Server) {\r\n      if (++closedServers === Server.servers.length) {\r\n        !!callback && callback();\r\n      }\r\n    };\r\n    Server.servers.forEach(server => server && server.close(() => {\r\n      closedServer(server);\r\n    }));\r\n  }\r\n  public stop(callback?: Function): void {\r\n    this.server && this.server.close(callback);\r\n    Server.servers = Server.servers.filter(server => server !== this.server);\r\n  }\r\n  public routeReport(): any {\r\n    return {\r\n      static: this.statics.map(route => route.url + ': ' + route.dir),\r\n      route: this.routes.map(route => route.url + ' (' + route.handle.length + ')'),\r\n      controllers: this.controllers.map(controller => {\r\n        return {\r\n          url: controller.base,\r\n          urls: controller.routes.map((route) => {\r\n            return {\r\n              url: route.url,\r\n              fullUrl: controller.base + route.url,\r\n              methods: route.handles.map((handle, method) => method + ' (' + handle.length + ')')\r\n            };\r\n          })\r\n        };\r\n      })\r\n    };\r\n  }\r\n}"]}